---
title: "2_t-tests"
format: html
editor: visual
---

```{r, message=FALSE, error=FALSE}

source("R/libraries.R")
source("R/functions.R")
source("R/metadata.R")

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)

#Load in SummarizedExperiment file
load(here::here("data/df_long.rda"))
```

T-tests for terbutaline

```{r}
#Subset data
df_ter <- df_long %>% 
    dplyr::filter(intervention=="terbutaline")

#Run paired t-tests for all proteins
results_ter_t <- df_ter %>% 
  group_by(protein) %>%
  t_test(abundance ~ time, paired=TRUE, detailed=TRUE, ref.group = "post") %>% 
    select(protein, estimate, p) %>% 
    dplyr::rename(logFC=estimate,
                  P.Value = p) %>% 
    column_to_rownames("protein")
    
results_ter_t <- results_ter_t %>% 
    mutate(xiao=10^-(sqrt(log10(1/(P.Value^logFC))^2))) %>% 
    mutate(q = qvalue(results_ter_t$P.Value)$qvalues) %>% 
    mutate("-log10p" = -log10(results_ter_t$P.Value)) %>% 
    mutate(regulated = case_when(q < 0.1 ~ "+")) %>% 
    dplyr::mutate(protein = row.names(results_ter_t)) %>% 
    dplyr::relocate(protein, .before=logFC) %>% 
    dplyr::arrange(desc(logFC)) %>% 
    mutate(intervention = "terbutaline")


#Write results to excel-file
write_xlsx(as.data.frame(results_ter_t), 'data/t-tests/results_ter.xlsx')

write_xlsx(as.data.frame(dplyr::filter(results_ter_t, logFC>0 & q < 0.1)), 'data/t-tests/results_ter_upregulated.xlsx')

write_xlsx(as.data.frame(dplyr::filter(results_ter_t, logFC<0 & q < 0.1)), 'data/t-tests/results_ter_downregulated.xlsx')

write_xlsx(as.data.frame(dplyr::filter(results_ter_t, q > 0.1)), 'data/t-tests/results_ter_unchanged.xlsx')

#Save results to 'data' folder
usethis::use_data(results_ter_t, overwrite = TRUE)

```

T-tests for resistance

```{r}
#Subset data
df_res <- df_long %>% 
    dplyr::filter(intervention=="resistance")

#Run paired t-tests for all proteins
results_res_t <- df_res %>% 
  group_by(protein) %>%
  t_test(abundance ~ time, paired=TRUE, detailed=TRUE, ref.group = "post") %>% 
    select(protein, estimate, p) %>% 
    dplyr::rename(logFC=estimate,
                  P.Value=p) %>% 
    column_to_rownames("protein")
    
results_res_t <- results_res_t %>% 
    mutate(xiao=10^-(sqrt(log10(1/(P.Value^logFC))^2))) %>% 
    mutate(q = qvalue(results_res_t$P.Value)$qvalues) %>% 
    mutate("-log10p" = -log10(results_res_t$P.Value)) %>% 
    mutate(regulated = case_when(q < 0.1 ~ "+")) %>% 
    dplyr::mutate(protein = row.names(results_res_t)) %>% 
    dplyr::relocate(protein, .before=logFC) %>% 
    dplyr::arrange(desc(logFC)) %>% 
    mutate(intervention = "resistance")


#Write results to excel-file
write_xlsx(as.data.frame(results_res_t), 'data/t-tests/results_res.xlsx')

write_xlsx(as.data.frame(dplyr::filter(results_res_t, logFC>0 & q < 0.1)), 'data/t-tests/results_res_upregulated.xlsx')

write_xlsx(as.data.frame(dplyr::filter(results_res_t, logFC<0 & q < 0.1)), 'data/t-tests/results_res_downregulated.xlsx')

write_xlsx(as.data.frame(dplyr::filter(results_res_t, q > 0.1)), 'data/t-tests/results_res_unchanged.xlsx')

#Save results to 'data' folder
usethis::use_data(results_res_t, overwrite = TRUE)

```

```{r}
common_regulated <- intersect(dplyr::filter(results_ter_t, q <0.1)$protein, dplyr::filter(results_res_t, q <0.1)$protein) %>% 
    as.data.frame()

write_xlsx(common_regulated, 'data/t-tests/common_regulated.xlsx')
```

# Long form dataset

```{r}

#Create long form data frame for the right leg
df_long <- assay(se) %>% 
    rownames_to_column(var="protein") %>% 
    melt(id.var="protein") %>% 
    dplyr::rename(sample = variable,
           abundance = value) %>% 
    merge((metadata %>% rownames_to_column("sample")), by="sample") %>% 
    dplyr::relocate(protein, 1) %>% 
    dplyr::relocate(abundance, .after=id)

#Export for figures
write_xlsx(df_long, "data/df_long.xlsx")

usethis::use_data(df_long, overwrite = TRUE)

```

#Long form l2fc data frame
```{r}

#Create long form data frame with individual l2fc. 
df_long_l2fc <- df_long %>% 
  arrange(protein, intervention, id, desc(time)) %>%
  group_by(protein, id) %>%
  mutate(l2fc = abundance - abundance[1])%>%
    dplyr::filter(time=="post") %>% 
  ungroup() %>% 
    dplyr::select(-"time", -"abundance")

#Add go-annotations
df_long_l2fc <- df_long_l2fc %>% 
    dplyr::mutate(go = mapIds(org.Hs.eg.db,
                     keys=df_long_l2fc$protein,
                     column="GO",
                     keytype="SYMBOL",
                     multiVals="list"))

#Add q-values
df_long_l2fc <- merge(df_long_l2fc, results_ter_t[,c("protein", "intervention", "q")], by.x=c("protein", "intervention"), by.y=c("protein", "intervention"), all=T) %>% 
    merge(results_res_t[,c("protein", "intervention", "q")], by.x=c("protein", "intervention"), by.y=c("protein", "intervention"), all=T) %>% 
    dplyr::mutate(q = ifelse(is.na(q.x), q.y, q.x)) %>% 
    dplyr::select(-c("q.x", "q.y"))

#Export for figures
write_xlsx(df_long_l2fc, "data/df_long_l2fc.xlsx")

#Save to data folder
usethis::use_data(df_long_l2fc, overwrite = TRUE)
```



#Long form l2fc data frame with mean values, sd, 95%CI and go annotations

```{r}
#Create long form data frame with mean l2fc
df_long_l2fc_mean <- df_long %>% 
  arrange(protein, intervention, id, desc(time)) %>%
  group_by(protein, id) %>%
  mutate(l2fc = abundance - abundance[1])%>%
    dplyr::filter(time=="post") %>% 
  ungroup() %>% 
    dplyr::select(-"time", -"abundance") %>% 
    group_by(protein, intervention) %>% 
    summarise(l2fc_mean = mean(l2fc),
              l2fc_sd = sd(l2fc),
              l2fc_n = n()) %>% 
    mutate(l2fc_se = l2fc_sd / sqrt(l2fc_n),
         l2fc_lower_ci = l2fc_mean - qt(1 - (0.05 / 2), l2fc_n - 1) * l2fc_se,
         l2fc_upper_ci = l2fc_mean + qt(1 - (0.05 / 2), l2fc_n - 1) * l2fc_se) %>% 
    ungroup() 

#Add go annotations
df_long_l2fc_mean <- df_long_l2fc_mean %>% 
    dplyr::mutate(go = mapIds(org.Hs.eg.db,
    keys=df_long_l2fc_mean$protein,
    column="GO",
    keytype="SYMBOL",
    multiVals="list")) 
   
#Add q-values
df_long_l2fc_mean <- merge(df_long_l2fc_mean, results_ter_t[,c("protein", "intervention", "q")], by.x=c("protein", "intervention"), by.y=c("protein", "intervention"), all=T) %>% 
    merge(results_res_t[,c("protein", "intervention", "q")], by.x=c("protein", "intervention"), by.y=c("protein", "intervention"), all=T) %>% 
    dplyr::mutate(q = ifelse(is.na(q.x), q.y, q.x)) %>% 
    dplyr::select(-c("q.x", "q.y")) %>% 
    dplyr::mutate(regulated = ifelse(q < 0.1, "Regulated", "Not regulated"))

#Export for figures
write_xlsx(df_long_l2fc_mean, "data/df_long_l2fc_mean.xlsx")

#Save to data folder
usethis::use_data(df_long_l2fc_mean, overwrite = TRUE)
```



